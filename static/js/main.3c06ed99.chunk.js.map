{"version":3,"sources":["utils/CommonFunction.js","components/TableComponent.js","components/StateComponent.js","components/CountryComponent.js","components/Header.js","components/Footer.js","components/AllCountry.js","components/World.js","App.js","index.js"],"names":["numberWithCommas","x","toString","replace","TableContaint","props","size","window","innerWidth","style","width","left","state","loading","district","fetch","response","Zones","json","data","zones","filter","states","stateDistrict","undefined","this","setState","stateZones","zone","statecode","districtData","map","border","sort","a","b","confirmed","className","Spinner","color","height","Modal","isOpen","modal","toggle","centered","ModalHeader","ModalBody","padding","Table","responsive","borderless","Badge","index","key","delta","Component","States","handleState","stateindex","total","statewise","stateData","card","activePercent","active","recoveredPercent","recovered","deathsPercent","deaths","Col","xs","sm","md","lg","Card","body","outline","onClick","CardTitle","pill","deltaconfirmed","Progress","backgroundColor","value","toFixed","Row","Country","Container","fluid","to","Button","CardText","deltarecovered","deltadeaths","marginLeft","lastupdatedtime","Header","useState","setIsOpen","Navbar","light","radius","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","Footer","fontSize","AllCountry","rows","CountryData","country","cases","todayCases","World","response2","countries","console","log","todayDeaths","Date","updated","toLocaleString","App","useEffect","ReactGA","initialize","pageview","location","pathname","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c06ed99.chunk.js","sourcesContent":["export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Table,\r\n  Spinner,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { numberWithCommas } from '../utils/CommonFunction';\r\n\r\nclass TableContaint extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      district: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await fetch('https://api.covid19india.org/v2/state_district_wise.json');\r\n    const Zones = await fetch('https://api.covid19india.org/zones.json');\r\n\r\n    const data = await response.json();\r\n    const { zones } = await Zones.json();\r\n\r\n    const state = data.filter((states) => this.props.stateDistrict === states.state)[0];\r\n    if (state === null || state === undefined) {\r\n      this.setState({ loading: false });\r\n      return null\r\n    }\r\n    else {\r\n      const stateZones = zones.filter((zone) => zone.statecode === state.statecode);\r\n\r\n      state.districtData.map((district) => {\r\n        stateZones.map(zone => {\r\n          if (zone.district === district.district) {\r\n            district.zone = zone.zone\r\n            if (district.zone === 'Orange') {\r\n              district.style = { border: '2px solid orange' }\r\n            }\r\n            if (district.zone === 'Red') {\r\n              district.style = { border: '2px solid red' }\r\n            }\r\n            if (district.zone === 'Green') {\r\n              district.style = { border: '2px solid green' }\r\n            }\r\n          }\r\n          return null\r\n        })\r\n        var obj = state.districtData;\r\n        obj.sort((a, b) => b.confirmed - a.confirmed);\r\n        this.setState({ district: state, loading: false });\r\n        return null\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  size = window.innerWidth <= 769 ? 'sm' : 'lg';\r\n  style = window.innerWidth <= 769 ? { width: '90%', left: '3%' } : { width: '75%' };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading ? (\r\n          <div className='d-flex justify-content-center'>\r\n            <Spinner\r\n              color='primary'\r\n              style={{ width: '5rem', height: '5rem' }}\r\n            />\r\n          </div>\r\n        ) : this.state.district !== null &&\r\n          this.state.district !== undefined ? (\r\n              <Modal\r\n                isOpen={this.props.modal}\r\n                toggle={this.props.toggle()}\r\n                size={this.size}\r\n                style={this.style}\r\n                centered\r\n              >\r\n                <ModalHeader>\r\n                  District Wise Data\r\n                  <p className=\"text-muted\"> *Outline specify the zone of district</p>\r\n                </ModalHeader>\r\n                <ModalBody style={{ padding: '0.1rem' }}>\r\n                  <Table size='sm' responsive borderless>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>\r\n                          <h4>\r\n                            <Badge color='dark'>District</Badge>\r\n                          </h4>\r\n                        </th>\r\n                        <th>\r\n                          <h4>\r\n                            <Badge color='dark'>\r\n                              {window.innerWidth <= 769\r\n                                ? window.innerWidth <= 375\r\n                                  ? 'Cfd'\r\n                                  : 'Cnfmd'\r\n                                : 'Confirmed'}\r\n                            </Badge>\r\n                          </h4>\r\n                        </th>\r\n                        <th>\r\n                          <h4>\r\n                            <Badge color='dark'>Today</Badge>\r\n                          </h4>\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.state.district.districtData.map(\r\n                        (districtData, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>\r\n                                <h5 >\r\n                                  <Badge color='secondary' style={districtData.style}>\r\n                                    {districtData.district}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </td>\r\n                              <td>\r\n                                <h5>\r\n                                  <Badge color='primary'>\r\n                                    {numberWithCommas(districtData.confirmed)}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </td>\r\n                              <td>\r\n                                <h5>\r\n                                  <Badge color='danger'>\r\n                                    {numberWithCommas(districtData.delta.confirmed)}\r\n                                  </Badge>\r\n                                </h5>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </tbody>\r\n                  </Table>\r\n                </ModalBody>\r\n              </Modal>\r\n            ) : (\r\n              <div></div>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableContaint;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardTitle, Badge, Progress, Row, Col } from 'reactstrap';\r\nimport Table from './TableComponent';\r\nimport { numberWithCommas } from '../utils/CommonFunction';\r\n\r\nclass States extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stateindex: null,\r\n      stateData: null,\r\n      modal: false,\r\n    };\r\n  }\r\n\r\n  handleState = (index) => {\r\n    if (this.state.stateindex === null || this.state.stateindex !== index || this.state.stateindex === index) {\r\n      const state = this.props.total.statewise[index].state;\r\n      this.toggle();\r\n      this.setState({ stateData: state, stateindex: index });\r\n    } else {\r\n      this.setState({ stateData: null, stateindex: null });\r\n    }\r\n  };\r\n\r\n  toggle = () =>\r\n    this.state.modal\r\n      ? this.setState({ modal: false })\r\n      : this.setState({ modal: true });\r\n\r\n  render() {\r\n    const card = this.props.total.statewise.map((state, index) => {\r\n      if (state.state !== 'Total') {\r\n        const activePercent = (state.active / state.confirmed) * 100;\r\n        const recoveredPercent = (state.recovered / state.confirmed) * 100;\r\n        const deathsPercent = (state.deaths / state.confirmed) * 100;\r\n        return (\r\n          <Col key={index} xs='12' sm='12' md='6' lg='4'>\r\n            <Card\r\n              body\r\n              outline\r\n              color='primary'\r\n              className='shadow m-3 bg-dark rounded'\r\n              onClick={() => {\r\n                this.handleState(index);\r\n              }}\r\n            >\r\n              <CardTitle className='text-primary font-weight-bold'>\r\n                <h4>\r\n                  {state.state} &nbsp;&nbsp;\r\n                  <Badge pill color='primary'>\r\n                    &#8593; {numberWithCommas(state.deltaconfirmed)}\r\n                  </Badge>\r\n                </h4>\r\n              </CardTitle>\r\n              <div>\r\n                <div className='text-center text-white font-weight-bold'>\r\n                  confirmed : {numberWithCommas(state.confirmed)}\r\n                </div>\r\n                <Progress\r\n                  style={{ height: '22px', backgroundColor: 'grey' }}\r\n                  value={state.confirmed !== '0' ? 100 : 0}\r\n                >\r\n                  100%\r\n                </Progress>\r\n                <div className='text-center text-white font-weight-bold'>\r\n                  Recovered : {numberWithCommas(state.recovered)}\r\n                </div>\r\n                <Progress\r\n                  style={{ height: '22px', backgroundColor: 'grey' }}\r\n                  color='success'\r\n                  value={recoveredPercent ? recoveredPercent : 0}\r\n                >\r\n                  {recoveredPercent ? recoveredPercent.toFixed(1) : 0}%\r\n                </Progress>\r\n                <div className='text-center text-white font-weight-bold'>\r\n                  Active : {numberWithCommas(state.active)}\r\n                </div>\r\n                <Progress\r\n                  style={{ height: '22px', backgroundColor: 'grey' }}\r\n                  color='warning'\r\n                  value={activePercent ? activePercent : 0}\r\n                >\r\n                  {activePercent ? activePercent.toFixed(1) : 0}%\r\n                </Progress>\r\n                <div className='text-center text-white font-weight-bold'>\r\n                  Deaths : {numberWithCommas(state.deaths)}\r\n                </div>\r\n                <Progress\r\n                  style={{ height: '22px', backgroundColor: 'grey' }}\r\n                  color='danger'\r\n                  value={deathsPercent ? deathsPercent : 0}\r\n                >\r\n                  {deathsPercent ? deathsPercent.toFixed(1) : 0}%\r\n                </Progress>\r\n                <p className='text-white mt-2'>*This card is clickable</p>\r\n              </div>\r\n            </Card>\r\n            {this.state.stateindex === index ? (\r\n              <Table\r\n                stateDistrict={this.state.stateData}\r\n                modal={this.state.modal}\r\n                toggle={() => this.toggle}\r\n              />\r\n            ) : (\r\n                <div></div>\r\n              )}\r\n          </Col>\r\n        );\r\n      } else {\r\n        return <div key={state.state}></div>;\r\n      }\r\n    });\r\n    return <Row>{card}</Row>;\r\n  }\r\n}\r\nexport default States;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Button,\r\n  Container,\r\n} from 'reactstrap';\r\nimport States from './StateComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { numberWithCommas } from '../utils/CommonFunction';\r\n\r\nclass Country extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      total: null,\r\n      states: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await fetch('https://api.covid19india.org/data.json');\r\n    const data = await response.json();\r\n    this.setState({ total: data.statewise[0], states: data, loading: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='m-2 mb-5 justify-content-center'>\r\n        {this.state.loading ? (\r\n          <div className='d-flex justify-content-center'>\r\n            <Spinner\r\n              color='primary'\r\n              style={{ width: '5rem', height: '5rem' }}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <div className='m-2 mb-5 justify-content-center'>\r\n\r\n              <Row className='d-flex justify-content-center'>\r\n\r\n                <Col className='col-5 col-md-4 offset-md-2 '>\r\n                  <Link to='/'>\r\n                    <Button outline color='primary' style={{ padding: '.4em 2em' }}>\r\n                      India\r\n                  </Button>\r\n                  </Link>\r\n                </Col>\r\n\r\n                <Col className='col-5 col-md-4 offset-md-2'>\r\n                  <Link to='/world'>\r\n                    <Button outline color='primary' style={{ padding: '.4em 2em' }}>\r\n                      World\r\n                  </Button>\r\n                  </Link>\r\n                </Col>\r\n\r\n              </Row>\r\n\r\n              <Row>\r\n\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card body outline color='primary' className=' shadow m-3 bg-dark rounded'>\r\n                    <h5>\r\n                      <CardTitle className='text-primary font-weight-bold'>\r\n                        Confirmed &nbsp;&nbsp;\r\n                      <Badge pill color='primary'>\r\n                          &#8593;\r\n                        {numberWithCommas(this.state.total.deltaconfirmed)}\r\n                        </Badge>\r\n                      </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-primary float-left font-weight-bold'>\r\n                        {numberWithCommas(this.state.total.confirmed)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card body outline color='warning' className=' shadow m-3 bg-dark rounded'>\r\n                    <h5>\r\n                      <CardTitle className='text-warning font-weight-bold'>\r\n                        Active &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-warning  font-weight-bold'>\r\n                        {numberWithCommas(this.state.total.active)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card body outline color='success' className=' shadow m-3 bg-dark rounded' >\r\n                    <h5>\r\n                      <CardTitle className='text-success font-weight-bold'>\r\n                        Recovered &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <Badge pill color='success'>\r\n                          &#8593;\r\n                        {numberWithCommas(this.state.total.deltarecovered)}\r\n                        </Badge>\r\n                      </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-success float-left font-weight-bold'>\r\n                        {numberWithCommas(this.state.total.recovered)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card body outline color='danger' className=' shadow m-3 bg-dark rounded'>\r\n                    <h5>\r\n                      <CardTitle className='text-danger font-weight-bold'>\r\n                        Deaths &nbsp;&nbsp;\r\n                      <Badge pill color='danger'>\r\n                          &#8593; {numberWithCommas(this.state.total.deltadeaths)}\r\n                        </Badge>\r\n                      </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-danger font-weight-bold'>\r\n                        {numberWithCommas(this.state.total.deaths)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n\r\n              </Row>\r\n\r\n              <h2 className='d-flex justify-content-center text-white'>\r\n                States\r\n              <span style={{ marginLeft: '10px' }}>\r\n                  {this.state.total.lastupdatedtime}\r\n                </span>\r\n              </h2>\r\n              <States total={this.state.states} />\r\n            </div>\r\n          )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Country;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavItem,\r\n  Nav,\r\n  NavbarToggler,\r\n  Collapse,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar light radius='10px' color='primary' className='mb-2' expand='md'>\r\n      <NavbarBrand href='/' className='font-weight-bold'>\r\n        Covid-19-India\r\n      </NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className='mr-auto' navbar>\r\n          <NavItem>\r\n            <NavLink className='NavLink' to='/india'>\r\n              India\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className='NavLink' to='/world'>\r\n              World\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='bg-dark text-light p-2 text-center'>\r\n      <p>\r\n        Developed by: <a href='https://github.com/milindneema'>Milind Neema</a>\r\n      </p>\r\n      <p>\r\n        Contact information:\r\n        <a href='https://www.instagram.com/milind_neema/'>\r\n          <span\r\n            className='fab fa-instagram p-1'\r\n            style={{ fontSize: '30px', color: 'lightblue' }}\r\n          ></span>\r\n        </a>\r\n        <a href='https://github.com/milindneema'>\r\n          <span\r\n            className='fab fa-github p-1'\r\n            style={{ fontSize: '30px', color: 'lightblue' }}\r\n          ></span>\r\n        </a>\r\n        <a href='https://www.linkedin.com/in/milind-neema-214ab3131/'>\r\n          <span\r\n            className='fab fa-linkedin p-1'\r\n            style={{ fontSize: '30px', color: 'lightblue' }}\r\n          ></span>\r\n        </a>\r\n        <a href='mailto:milindneema15@gmail.com'>\r\n          <span\r\n            className='fas fa-envelope p-1'\r\n            style={{ fontSize: '30px', color: 'lightblue' }}\r\n          ></span>\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Table, Badge } from 'reactstrap';\r\nimport { numberWithCommas } from '../utils/CommonFunction';\r\n\r\nconst AllCountry = ({ CountryData }) => {\r\n  const rows = CountryData.map((country) => {\r\n    return (\r\n      <tr key={country.country}>\r\n        <td>{country.country}</td>\r\n        <td>\r\n          {numberWithCommas(country.cases)}\r\n          <br />\r\n          <Badge className='.todayData' pill color='danger'>\r\n            &#8593; {numberWithCommas(country.todayCases)}\r\n          </Badge>\r\n        </td>\r\n        <td>{numberWithCommas(country.active)}</td>\r\n        <td>{numberWithCommas(country.recovered)}</td>\r\n        <td>{numberWithCommas(country.deaths)}</td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <Table className='table' responsive size='sm'>\r\n      <thead>\r\n        <tr>\r\n          <th style={{ width: '20%' }}>\r\n            {window.innerWidth <= 769\r\n              ? window.innerWidth <= 576\r\n                ? 'CN'\r\n                : 'CONTRY'\r\n              : 'Country Name'}\r\n          </th>\r\n          <th style={{ width: '20%' }}>\r\n            {window.innerWidth <= 769\r\n              ? window.innerWidth <= 576\r\n                ? 'Cfd'\r\n                : 'Cnfmd'\r\n              : 'Confirmed'}\r\n          </th>\r\n          <th style={{ width: '20%' }}>\r\n            {window.innerWidth <= 769\r\n              ? window.innerWidth <= 576\r\n                ? 'AT'\r\n                : 'ATV'\r\n              : 'Active'}\r\n          </th>\r\n          <th style={{ width: '20%' }}>\r\n            {window.innerWidth <= 769\r\n              ? window.innerWidth <= 576\r\n                ? 'RCD'\r\n                : 'RECVD'\r\n              : 'Recovered'}\r\n          </th>\r\n          <th style={{ width: '20%' }}>\r\n            {window.innerWidth <= 769\r\n              ? window.innerWidth <= 576\r\n                ? 'D'\r\n                : 'DTH'\r\n              : 'Deaths'}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{rows}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default AllCountry;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  Badge,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Button,\r\n} from 'reactstrap';\r\nimport AllCountry from './AllCountry';\r\nimport { Link } from 'react-router-dom';\r\nimport { numberWithCommas } from '../utils/CommonFunction';\r\n\r\nclass World extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      World: null,\r\n      CountryData: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await fetch('https://corona.lmao.ninja/v2/all');\r\n    const response2 = await fetch(\r\n      'https://corona.lmao.ninja/v2/countries?sort=cases'\r\n    );\r\n    const data = await response.json();\r\n    const countries = await response2.json();\r\n    console.log(data);\r\n    this.setState({ World: data, CountryData: countries, loading: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className='m-2 mb-5 justify-content-center'>\r\n        {this.state.loading ? (\r\n          <div className='d-flex justify-content-center'>\r\n            <Spinner\r\n              color='primary'\r\n              style={{ width: '5rem', height: '5rem' }}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <div>\r\n              <Row className='d-flex justify-content-center'>\r\n                <Col className='col-5 col-md-4 offset-md-2'>\r\n                  <Link to='/'>\r\n                    <Button\r\n                      outline\r\n                      color='primary'\r\n                      style={{ padding: '.4em 2.5em' }}\r\n                    >\r\n                      India\r\n                  </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col className='col-5 col-md-4 offset-md-2'>\r\n                  <Link to='/world'>\r\n                    <Button\r\n                      outline\r\n                      color='primary'\r\n                      style={{ padding: '.4em 2.5em' }}\r\n                    >\r\n                      World\r\n                  </Button>\r\n                  </Link>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card\r\n                    body\r\n                    outline\r\n                    color='primary'\r\n                    className=' shadow m-3 bg-dark rounded'\r\n                  >\r\n                    <h5>\r\n                      <CardTitle className='text-primary font-weight-bold'>\r\n                        Confirmed &nbsp;&nbsp;&nbsp;\r\n                    <Badge pill color='primary'>\r\n                          &#8593; {numberWithCommas(this.state.World.todayCases)}\r\n                        </Badge>\r\n                      </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-primary float-left font-weight-bold'>\r\n                        {numberWithCommas(this.state.World.cases)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card\r\n                    body\r\n                    outline\r\n                    color='warning'\r\n                    className=' shadow m-3 bg-dark rounded'\r\n                  >\r\n                    <h5>\r\n                      <CardTitle className='text-warning font-weight-bold'>\r\n                        Active &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-warning  font-weight-bold'>\r\n                        {numberWithCommas(this.state.World.active)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card\r\n                    body\r\n                    outline\r\n                    color='success'\r\n                    className=' shadow m-3 bg-dark rounded'\r\n                  >\r\n                    <h5>\r\n                      <CardTitle className='text-success font-weight-bold'>\r\n                        Recovered &nbsp;&nbsp;&nbsp;&nbsp;\r\n                  </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-success float-left font-weight-bold'>\r\n                        {numberWithCommas(this.state.World.recovered)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n                <Col xs='12' sm='6' md='6' lg='3'>\r\n                  <Card\r\n                    body\r\n                    outline\r\n                    color='danger'\r\n                    className=' shadow m-3 bg-dark rounded'\r\n                  >\r\n                    <h5>\r\n                      <CardTitle className='text-danger font-weight-bold'>\r\n                        Deaths &nbsp;&nbsp;&nbsp;\r\n                    <Badge pill color='danger'>\r\n                          &#8593; {numberWithCommas(this.state.World.todayDeaths)}\r\n                        </Badge>\r\n                      </CardTitle>\r\n                    </h5>\r\n                    <h4>\r\n                      <CardText className='text-danger font-weight-bold'>\r\n                        {numberWithCommas(this.state.World.deaths)}\r\n                      </CardText>\r\n                    </h4>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <h5 className='d-flex justify-content-center'>\r\n                Country\r\n              <span style={{ marginLeft: '10px' }}>\r\n                  ({new Date(this.state.World.updated).toLocaleString()}\r\n                </span>\r\n              )\r\n            </h5>\r\n              <AllCountry CountryData={this.state.CountryData} />\r\n            </div>\r\n          )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default World;\r\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n  HashRouter,\n} from 'react-router-dom';\nimport './App.css';\nimport Country from './components/CountryComponent';\nimport ReactGA from 'react-ga';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport World from './components/World';\n\nfunction App() {\n  useEffect(() => {\n    ReactGA.initialize('UA-163580653-1');\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n\n  const country = () => {\n    return <Country />;\n  };\n\n  const world = () => {\n    return <World />;\n  };\n\n  return (\n    <HashRouter>\n      <div className='bg-dark'>\n        <Header />\n        <Switch>\n          <Route path='/india' component={country} />\n          <Route path='/world' component={world} />\n          <Redirect to='/india' />\n        </Switch>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}